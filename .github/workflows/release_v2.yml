name: Release v2

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.case.os }}
    strategy:
      matrix:
        # https://doc.rust-lang.org/nightly/rustc/platform-support.html
        case:
          - target: x86_64-pc-windows-gnu
            output: target/x86_64-pc-windows-gnu/release-lto/fpgrars.exe
            finalOutput: target/x86_64-pc-windows-gnu/release-lto/fpgrars-x86_64-pc-windows-gnu
            finalOutputExt: .exe
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            output: target/x86_64-unknown-linux-gnu/release-lto/fpgrars
            finalOutput: target/x86_64-unknown-linux-gnu/release-lto/fpgrars-x86_64-unknown-linux-gnu
            finalOutputExt: ""
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            output: target/x86_64-apple-darwin/release-lto/fpgrars
            finalOutput: target/x86_64-apple-darwin/release-lto/fpgrars-x86_64-apple-darwin
            finalOutputExt: ""
            os: macos-latest
        features:
          - list: ""
            output-add: --original
          - list: unb
            output-add: --unb
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install ALSA (for MIDI support)
        if: matrix.case.os != 'macos-latest'
        run: sudo apt-get install libasound2-dev
      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}
      - name: Build
        run: cargo build --profile release-lto --features=${{ matrix.features.list }} --target=${{ matrix.case.target }}
      - name: Strip binary
        run: strip ${{ matrix.case.output }}
      - name: Rename output
        run: mv ${{ matrix.case.output }} ${{ matrix.case.finalOutput }}${{ matrix.features.output-add }}${{ matrix.case.finalOutputExt }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.case.finalOutput }}${{ matrix.features.output-add }}${{ matrix.case.finalOutputExt }} # amazing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
